//===================================================================
// COPYRIGHT liqiang 2020/05/23
//===================================================================
// CMCXLSUtil.cpp
// Header definition of class CMCXLSUtil
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2020/05/23 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CMCXLSUtil_H
#define CMCXLSUtil_H

#include "CMCCheckUtil.h"
#include "CATUnicodeString.h"
#include "CATListOfCATUnicodeString.h"

//-----------------------------------------------------------------------

class CExcelOperator;

class ExportedByCMCCheckUtil CMCXLSUtil
{
public:
// Standard constructors and destructors
// -------------------------------------
CMCXLSUtil ();
virtual ~CMCXLSUtil ();

bool WOpen();
bool WOpen(CATUnicodeString strFile);
bool WOpenSheet(int i );
bool WOpenSheet(CATUnicodeString istrSheet);
bool WSetCurrentSheetName(CATUnicodeString iSheetName);
bool WGetSheetsCount(int& osheetcount);
CATUnicodeString WGetCurrentSheetName();
bool WAdd_Column(int column);
bool WDelete_Column(int column);
bool WAdd_Row(int row);
bool WDelete_Row(int row);
bool WGet_Rows_Columns(int& nrow, int& ncolumn);
BOOL WSetItemText(long Row,long Col,CATUnicodeString strText);
CATUnicodeString WGetItemText(long Row,long Col);
void WGetRange(CATUnicodeString strBegin,CATUnicodeString strEnd);
void WMergeRange(CATUnicodeString strBegin, CATUnicodeString strEnd);
void WAutoColFit();
void WAutoRowFit();
void WSetWrapText(BOOL blnTrue);
void WGetAllRange();
long WGetRowS();
long WGetUsedRows();
long WGetColS();
long WGetUsedCols();
void WSetNumberFormat(const int &iIndexOfFormat);
void WSetColumnWidth(int intWidth);
void WSetRowHeight(int intHeight);
BOOL WReadRow(CATListOfCATUnicodeString &oRowValues, long irow);
BOOL WReadRow(CATListOfCATUnicodeString &ostrRowValues,long irow,long icolBegin,long icolEnd);
BOOL WWriteRow(CATListOfCATUnicodeString &istrRowValues,long irow);
BOOL WWriteRow(CATListOfCATUnicodeString &strRowValues,long irow,long icolBegin);
BOOL WReadColumn(CATListOfCATUnicodeString &ostrColValues,long icol);
BOOL WReadColumn(CATListOfCATUnicodeString &ostrColValues,long icol,long irowBegin,long irowEnd);
BOOL WWriteColumn(CATListOfCATUnicodeString &istrColValues,long icol);
BOOL WWriteColumn(CATListOfCATUnicodeString &istrColValues,long icol,long irowBegin);
BOOL WCopySheet(CATUnicodeString sheetName);
BOOL WDeleteSheet(CATUnicodeString sheetName);
BOOL WGetSheetName(long iindex,CATUnicodeString &osheetName);
void WSetAlignment(const int &iIndexOfAligment);
BOOL WReadRowEx(CATListOfCATUnicodeString &oRowValues,long irow);
void WSave();
void WSaveAs(CATUnicodeString strPath);
void WExit();
bool WClose();
//
// TODO: Add your methods for this class here.
//

private:
// Copy constructor and equal operator
// -----------------------------------
CMCXLSUtil (CMCXLSUtil &);
CMCXLSUtil& operator=(CMCXLSUtil&);


CExcelOperator *pExcelOperator;

};

//-----------------------------------------------------------------------

#endif
